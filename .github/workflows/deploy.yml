name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    name: 🔬 Run Unit & Integration Tests + Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=main --cov-report=term --cov-report=xml tests/

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  trivy-fs-scan:
    name: 🔐 Trivy File System Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy on filesystem
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'

  build:
    name: 🛠️ Build Docker Image
    needs: [test, trivy-fs-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t dahunsij/fastapi-service:latest .

  trivy-image-scan:
    name: 🧪 Trivy Docker Image Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          scan-ref: 'dahunsij/fastapi-service:latest'

  push:
    name: 🚀 Push Docker Image to Hub
    needs: trivy-image-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push dahunsij/fastapi-service:latest

  deploy:
    name: 🚦 Deploy to Minikube
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Apply Kubernetes Manifests
        run: |
          echo "Skipping live deployment (Minikube not accessible in GitHub Actions)"
          echo "You can run 'kubectl apply -f k8s/' locally"
